#pragma once

#ifndef TEXTURES_MIKE_WAZOWSKI
#define TEXTURES_MIKE_WAZOWSKI

#include <glad/glad.h>

float TEX_MIKE_WIDTH = 800.0f;
float TEX_MIKE_HEIGHT = 800.0f;

GLfloat headMikeTextureCoordsBuffer[72];
GLfloat bodyMikeTextureCoordsBuffer[72];

void loadTextureDataMikeWazowski() {

	GLfloat headTextureCoords[72] = {
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 800.0f) / TEX_MIKE_HEIGHT),
		(800.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 800.0f) / TEX_MIKE_HEIGHT),
		(800.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 800.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(800.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),

		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),

		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),

		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),

		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),

		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
	};

	GLfloat bodyTextureCoords[72] = {
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),

		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),

		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),

		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),

		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),

		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
		(0.0f / TEX_MIKE_WIDTH), ((TEX_MIKE_HEIGHT - 0.0f) / TEX_MIKE_HEIGHT),
	};		

	for (int i = 0; i < 72; i++) {
		headMikeTextureCoordsBuffer[i] = headTextureCoords[i];
		bodyMikeTextureCoordsBuffer[i] = bodyTextureCoords[i];
	}
}

#endif // !


